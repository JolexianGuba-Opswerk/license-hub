generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model UserDetails {
  id           String        @id @default(uuid()) @db.Uuid
  name         String
  email        String        @unique
  role         Role
  department   Department
  position     String
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  managerId    String?       @db.Uuid
  manager      UserDetails?  @relation("UserManager", fields: [managerId], references: [id])
  subordinates UserDetails[] @relation("UserManager")
}

model License {
  id          String       @id @default(uuid())
  name        String
  vendor      String?
  description String?
  totalSeats  Int          @default(0)
  cost        Float?
  expiryDate  DateTime?
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  licenseKeys LicenseKey[]
}

model LicenseKey {
  id        String        @id @default(uuid())
  licenseId String
  key       String?
  status    LicenseStatus @default(ACTIVE)
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  license   License       @relation(fields: [licenseId], references: [id])
}

model LicenseRequest {
  id        String        @id @default(uuid())
  userId    String
  licenseId String
  managerId String
  status    RequestStatus @default(PENDING)
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
}

model LicenseAssignment {
  id               String   @id @default(uuid())
  userId           String
  licenseKeyId     String   @unique
  licenseRequestId String   @unique
  assignedAt       DateTime @default(now())
}

model ProcurementRequest {
  id          String            @id @default(uuid())
  licenseId   String
  requestedBy String
  approvedBy  String?
  status      ProcurementStatus @default(PENDING)
  quantity    Int
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt
}

model ProcurementDocument {
  id                   String   @id @default(uuid())
  procurementRequestId String
  fileUrl              String
  uploadedAt           DateTime @default(now())
}

enum Role {
  EMPLOYEE
  MANAGER
  ADMIN
  ACCOUNT_OWNER
  FINANCE
}

enum Department {
  ITSG
  SRE
  HR
  SSED
}

enum RequestStatus {
  PENDING
  APPROVED
  DENIED
  FULFILLED
}

enum ProcurementStatus {
  PENDING
  APPROVED
  DENIED
  PURCHASED
}

enum LicenseStatus {
  ACTIVE
  INACTIVE
  ASSIGNED
}
